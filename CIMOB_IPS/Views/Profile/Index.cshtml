@model CIMOB_IPS.Models.ProfileViewModel
@using Microsoft.EntityFrameworkCore;

@{
    ViewData["Title"] = "Profile";
}

<p class="page-title">Perfil</p>
<div class="profile" style="height:100%;">
    <button type="button" onclick="location.href='@Url.Action("Edit", "Profile")'" style="display:@ViewData["edit-profile-display"]">Editar Perfil</button>

    @if (Model != null && Model.AccountType == EnumAccountType.STUDENT)
    {
        <div class="profileImage">
            <img id="img" src="@Model.Student.IdAccountNavigation.AvatarUrl" class="profile-image" style="width:9.5vw; height:9.5vw;" draggable="false" />
        </div>
    }
    else
    {

        <div class="profileImage">
            <img id="img" src="@Model.Technician.IdAccountNavigation.AvatarUrl" class="profile-image" style="width:9.5vw; height:9.5vw;" draggable="false" />
        </div>
    }

    <table class="information">
        @if (Model != null && Model.AccountType == EnumAccountType.STUDENT)
        {
            Mobility activeMobility = null;

            using (var context = new CIMOB_IPS_DBContext(new DbContextOptions<CIMOB_IPS_DBContext>()))
            {
                long lngEndedMobilityState = context.State.Where(s => s.Description == "Terminada").Select(s => s.IdState).SingleOrDefault();
                long lngAcceptedApplicationState = context.State.Where(s => s.Description == "Confirmada").Select(s => s.IdState).SingleOrDefault();

                List<long> lstMobilitiesIds = context.Application.Where(a => a.IdStudent == Model.Student.IdStudent && a.IdState == lngAcceptedApplicationState).Select(a => a.IdApplication).ToList();

                if (lstMobilitiesIds.Count > 0)
                {
                    activeMobility = context.Mobility.Where(m => lstMobilitiesIds.Contains(m.IdApplication) && m.IdState != lngEndedMobilityState)
                    .Include(m => m.IdApplicationNavigation)
                    .Include(m => m.IdOutgoingInstitutionNavigation)
                    .SingleOrDefault();

                    activeMobility.IdApplicationNavigation.IdProgramNavigation = context.Program.Where(p => p.IdProgram == activeMobility.IdApplicationNavigation.IdProgram)
                        .Include(p => p.IdProgramTypeNavigation)
                        .SingleOrDefault();

                    activeMobility.IdOutgoingInstitutionNavigation.IdNationalityNavigation = context.Nationality.Where(n => n.IdNationality == activeMobility.IdOutgoingInstitutionNavigation.IdNationality).SingleOrDefault();
                }
            }

            <tr>
                <td class="profileLabel">@Html.DisplayNameFor(model => model.Student.Name)</td>
                <td>@Html.DisplayFor(model => model.Student.Name)</td>
            </tr>
            <tr>
                <td class="profileLabel">@Html.DisplayNameFor(model => model.Student.IdNationality)</td>
                <td>@Html.DisplayFor(model => model.Student.IdNationalityNavigation.Description)</td>
            </tr>
            <tr>
                <td class="profileLabel">@Html.DisplayNameFor(model => model.Student.IdCourseNavigation)</td>
                <td>@Html.DisplayFor(model => model.Student.IdCourseNavigation.Name)</td>
            </tr>
            <tr>
                <td class="profileLabel">@Html.DisplayNameFor(model => model.Student.Gender)</td>
                <td>@Html.DisplayFor(model => model.Student.Gender)</td>
            </tr>
            <tr>
                <td class="profileLabel">@Html.DisplayNameFor(model => model.Student.BirthDate)</td>
                <td>@Html.DisplayFor(model => model.Student.BirthDate)</td>
            </tr>
            <tr>
                <td class="profileLabel">@Html.DisplayNameFor(model => model.Student.IdAccountNavigation.Email)</td>
                <td>@Html.DisplayFor(model => model.Student.IdAccountNavigation.Email)</td>
            </tr>
            <tr>
                <td class="profileLabel">@Html.DisplayNameFor(model => model.Student.Telephone)</td>
                <td>@Html.DisplayFor(model => model.Student.Telephone)</td>
            </tr>
            <tr>
                <td class="profileLabel">@Html.DisplayNameFor(model => model.Student.IdAddressNavigation.PostalCode)</td>
                <td>@Html.DisplayFor(model => model.Student.IdAddressNavigation.PostalCode)</td>
            </tr>
            <tr>
                <td class="profileLabel">@Html.DisplayNameFor(model => model.Student.IdAddressNavigation.AddressDesc)</td>
                <td>@Html.DisplayFor(model => model.Student.IdAddressNavigation.AddressDesc)</td>
            </tr>
            <tr>
                <td class="profileLabel">@Html.DisplayNameFor(model => model.Student.IdAddressNavigation.DoorNumber)</td>
                <td>@Html.DisplayFor(model => model.Student.IdAddressNavigation.DoorNumber)</td>
            </tr>
            <tr>
                <td class="profileLabel">@Html.DisplayNameFor(model => model.Student.IdAddressNavigation.Floor)</td>
                <td>@Html.DisplayFor(model => model.Student.IdAddressNavigation.Floor)</td>
            </tr>
            <tr>
                <td class="profileLabel">@Html.DisplayNameFor(model => model.Student.Credits)</td>
                <td>@Html.DisplayFor(model => model.Student.Credits)</td>
            </tr>
            <tr>
                <td class="profileLabel">@Html.DisplayNameFor(model => model.Student.Cc)</td>
                <td>@Html.DisplayFor(model => model.Student.Cc)</td>
            </tr>
            <tr>
                <td class="profileLabel">@Html.DisplayNameFor(model => model.Student.StudentNum)</td>
                <td>@Html.DisplayFor(model => model.Student.StudentNum)</td>
            </tr>
            <tr>
                @if (activeMobility != null)
                {
                    <td class="profileLabel"><p> Mobilidade Atual: </p></td>
                    <td>@activeMobility.IdApplicationNavigation.IdProgramNavigation.IdProgramTypeNavigation.Name 
                - @activeMobility.IdOutgoingInstitutionNavigation.Name (@activeMobility.IdOutgoingInstitutionNavigation.IdNationalityNavigation.Description)</td>
                }
                else
                {
                    <td class="profileLabel"><p>Sem Mobilidade Actual.</p></td>
                }
            </tr>
        }
        else
        {
            <tr>
                <td class="profileLabel">@Html.DisplayNameFor(model => model.Technician.Name)</td>
                <td>@Html.DisplayFor(model => model.Technician.Name)</td>
            </tr>
            <tr>
                <td class="profileLabel">@Html.DisplayNameFor(model => model.Technician.IdAccountNavigation.Email)</td>
                <td>@Html.DisplayFor(model => model.Technician.IdAccountNavigation.Email)</td>
            </tr>
            <tr>
                <td class="profileLabel">@Html.DisplayNameFor(model => model.Technician.Telephone)</td>
                <td>@Html.DisplayFor(model => model.Technician.Telephone)</td>
            </tr>
        }
    </table>
</div>
@model CIMOB_IPS.Models.Program
@using Microsoft.EntityFrameworkCore;

@{
    var intEcts = 0;
    var intApplications = 3;

    if (User.Identity.IsAuthenticated)
    {
        ProfileController pc = new ProfileController();
        intEcts = await pc.GetCurrentStudentECTS(User);

        ApplicationController ac = new ApplicationController(new CIMOB_IPS_DBContext(new DbContextOptions<CIMOB_IPS_DBContext>()));
        intApplications = await ac.GetNumberPendentApplications(User);
    }

    bool bolIsLoggedOff = !User.Identity.IsAuthenticated;
    bool bolNoVacancies = Model.Vacancies <= 0;
    bool bolClosedProgram = !(Model.IdStateNavigation.Description == "Aberto") || DateTime.Now > Model.ClosingDate;
    bool bolNoCredits = intEcts < 45;
    bool bolMaxApplications = intApplications >= 3;
}

<link rel="stylesheet" href='@Url.Content("~/css/program.css")' />

<div class="programDetails">

    <img draggable="false" src="~/images/Erasmus-logo1.jpg" />

    <p style="width:80%;margin-left:10%;">@Html.DisplayFor(model => model.IdProgramTypeNavigation.Description)</p>

    <br />
    <p>As candidaturas abrirão dia <span style="color:var(--blue-var4)"><b>@Html.DisplayFor(model => model.OpenDate)</b></span> às 00:00h</p>
    <p>As candidaturas encerrarão dia <span style="color:var(--blue-var4)"><b>@Html.DisplayFor(model => model.ClosingDate)</b></span>  às 23:59h.</p>

    <p>Programa <span style="color:@ViewData["programstate-color"]"><b>@Html.DisplayFor(model => model.IdStateNavigation.Description)</b></span></p>

    @if (Model.InstitutionProgram.Count > 0)
    {
        <p>@Html.DisplayNameFor(model => model.InstitutionProgram)</p>

        @foreach (var item in Model.InstitutionProgram)
        {
            <button id="@item.IdOutgoingInstitutionNavigation.Name.Replace(" ",String.Empty)" class="button-institution" onclick="javascript:toggleCourses(this);">@item.IdOutgoingInstitutionNavigation.Name (@item.IdOutgoingInstitutionNavigation.IdNationalityNavigation.Description)</button>

            <div style="display:none;">
                @if (item.IdOutgoingInstitutionNavigation.Course.Count() > 0)
                {
                    <br><span id="available-courses">Cursos disponíveis</span><br /> 
                    <div>
                        @foreach (var course in item.IdOutgoingInstitutionNavigation.Course)
                        {
                            <span class="institution-course">@course.Name</span>
                        }
                    </div>
                }
                else
                {
                    <p>Sem informações sobre os cursos associados à instituição!</p>
                }
            </div>
        }
    }
    else
    {
        <p>Sem informações sobre as instituições associadas ao programa!</p>
    }
    @if (!bolClosedProgram && !bolMaxApplications && !bolNoVacancies && !bolNoCredits && !bolIsLoggedOff)
    {
        <p>@Html.DisplayNameFor(model => model.Vacancies): <b>@Html.DisplayFor(model => model.Vacancies)</b></p>
        <input type="button" value="Efectuar Candidatura" onclick="location.href='@Url.Action("New", "Application" , new {programID = Model.IdProgram})'" />
    }
    else if (bolIsLoggedOff && !bolClosedProgram)
    {
        <p>@Html.DisplayNameFor(model => model.Vacancies): @Html.DisplayFor(model => model.Vacancies)</p>
        <p>Caso deseje candidatar-se ao presente programa, <a href="@Url.Action("Login", "Account")">autentique-se</a>.</p>
    }
    else if (bolClosedProgram || DateTime.Now >= Model.ClosingDate)
    {
        <p>Programa encerrado! Consulte <a href="@Url.Action("Index", "Program")">outros programas</a>.</p>
    }
    else if (bolNoVacancies && !bolIsLoggedOff)
    {
        <p>@Html.DisplayNameFor(model => model.Vacancies): @Html.DisplayFor(model => model.Vacancies)</p>
        <p>Programa sem vagas disponíveis! Tente mais tarde ou consulte <a href="@Url.Action("Index", "Program")">outros programas</a>.</p>
    }
    else if (bolNoCredits && !bolIsLoggedOff)
    {

        <p>@Html.DisplayNameFor(model => model.Vacancies): @Html.DisplayFor(model => model.Vacancies)</p>
        <p>Não possui ECTS suficientes para se candidatar a um programa de mobilidade! Para obter ECTS, terá de concluir Unidades Curriculares.</p>
    }
    else if (bolMaxApplications && !bolIsLoggedOff)
    {
        <p>@Html.DisplayNameFor(model => model.Vacancies): @Html.DisplayFor(model => model.Vacancies)</p>
        <p>Já possui o máximo de 3 candidaturas pendentes!</p>
    }

</div>
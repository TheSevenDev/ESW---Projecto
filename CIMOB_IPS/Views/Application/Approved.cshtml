@model PaginatedList<CIMOB_IPS.Models.Application>
@using Microsoft.EntityFrameworkCore;
<link rel="stylesheet" href='@Url.Content("~/css/site.css")' />
<link rel="stylesheet" href='@Url.Content("~/css/application.css")' />
<link rel="stylesheet" href='@Url.Content("~/css/registo.css")' />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">


@{
    ViewData["Title"] = "Candidaturas Aprovadas";

    var isTech = false;

    if(User.Identity.IsAuthenticated)
    {
        if (User.IsInRole("tecnico") || User.IsInRole("tecnico_admin"))
        {
            isTech = true;
        }
    }

}

<p class="page-title">Candidaturas Aprovadas</p>

<form id="search-application">
    <input type="search" name="search_by" placeholder="Procurar.." value="@ViewData["search-by"]" />
    <button type="submit"><i class="fa fa-search"></i></button>
</form>
<br />
<div class="main-container-submitted-applications" style="padding:1%;padding-left:2%; margin-bottom: 10%;">
    @if (Model.Count > 0)
    {
        <table style="margin: 1% auto;">
            <thead>
                <tr>
                    <th style="width:8em;">
                        @Html.DisplayNameFor(model => model.First().IdStudentNavigation.StudentNum)
                    </th>
                    <th>
                        Nome
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Mobility.First().IdOutgoingInstitutionNavigation)
                    </th>
                    <th>
                        Data de Início de Mobilidade
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    var strName = "";
                    var arrNames = item.IdStudentNavigation.Name.Split(' ');
                    string strFirstName = arrNames[0];
                    string strLastName = arrNames[arrNames.Length - 1];
                    using (var context = new CIMOB_IPS_DBContext(new DbContextOptions<CIMOB_IPS_DBContext>()))
                    {
                        Institution institution = context.Institution.Where(i => i.IdInstitution == item.Mobility.First().IdOutgoingInstitution).SingleOrDefault();
                    
                        if (arrNames.Length > 1)
                        {
                            strName = strFirstName + " " + strLastName;
                        }
                        else
                        {
                            strName = strFirstName;
                        }
                        <tr>                        
                                <td>
                                    @Html.DisplayFor(model => item.IdStudentNavigation.StudentNum)
                                </td>
                                <td>
                                    @if (isTech)
                                    {
                                        <a class="profileLink" onclick="viewProfile(@item.IdStudentNavigation.IdStudent)">@strName</a>
                                    }
                                    else
                                    {
                                        @strName
                                    }
                                </td>
                                <td>
                                    <a target="_blank" class="profileLink" href=@institution.Hyperlink>@institution.Name</a>
                                </td>
                                <td>
                                    @Html.DisplayFor(model => item.IdProgramNavigation.MobilityBeginDate)
                                </td>
                        </tr>
                    }
                }
            </tbody>
        </table>

        <div>
            @{
                var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.HasNextPage ? "disabled" : "";
            }

            @if (Model.HasPreviousPage)
            {
                <a asp-action="Approved" asp-controller="Application" asp-route-pageApplication="@(Model.PageIndex - 1)" class='@prevDisabled'>Anterior</a>
            }

            Página @Model.PageIndex de @Model.TotalPages
            
            @if (Model.HasNextPage)
            {
                <a asp-action="Approved" asp-controller="Application" asp-route-pageApplication="@(Model.PageIndex + 1)" class='@nextDisabled'>Seguinte</a>
            }
        </div> 
    }
    else
    {
        <span>Neste momento, não está disponível nenhuma candidatura aprovada.</span>
    }

</div>
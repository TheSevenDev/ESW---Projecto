using CIMOB_IPS_BackOffice.Models;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace CIMOB_IPS_BackOffice.Windows
{
    /// <summary>
    /// Interaction logic for HelpWindow.xaml
    /// </summary>
    public partial class HelpWindow : Window
    {
        string connstr = Utility.GetConnectionString();

        public List<Help> Helps { get; set; }

        public HelpWindow()
        {
            Helps = new List<Help>();

            InitializeComponent();
            PopulateDataGrid();
        }

        private void PopulateDataGrid()
        {
            Helps.Clear();

            SqlConnection scnConn = new SqlConnection(connstr);

            string strQuery = "select id_help, controller_name, action_name, description from Help";

            SqlCommand scmCommand = new SqlCommand(strQuery, scnConn);

            try
            {
                scnConn.Open();

                SqlDataReader dtrReader = scmCommand.ExecuteReader();

                while (dtrReader.Read())
                {
                    Helps.Add(new Help
                    {
                        IdHelp = dtrReader.GetInt64(0),
                        Controller = dtrReader.GetString(1),
                        Action = dtrReader.GetString(2),
                        HTML = dtrReader.GetString(3)
                    });
                }

                DtHelp.ItemsSource = Helps;

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            finally
            {
                scnConn.Close();
            }

            DtHelp.Items.Refresh();
        }

        private void DtHelp_AutoGeneratedColumns(object sender, EventArgs e)
        {
            DtHelp.Columns[0].Header = "ID";
            DtHelp.Columns[1].Header = "Controlador";
            DtHelp.Columns[2].Header = "Acção";
            DtHelp.Columns[3].Header = "HTML";
        }

        private void BtnAdd_Click(object sender, RoutedEventArgs e)
        {
            ManageHelp manageHelpWindow = new ManageHelp(null);
            if (manageHelpWindow.ShowDialog() == true)
            {
                Help newHelp = manageHelpWindow.Help;

                AddHelp(newHelp);
                PopulateDataGrid();
            }
        }

        private void DtHelp_MouseDoubleClick(object sender, MouseButtonEventArgs e)
        {
            IList rows = DtHelp.SelectedItems;

            if (rows.Count == 0)
            {
                MessageBox.Show("Por favor seleccione um item da lista.");
            }
            else
            {
                ManageHelp manageHelpWindow = new ManageHelp((Help)rows[0]);
                if (manageHelpWindow.ShowDialog() == true)
                {
                    Help newHelp = manageHelpWindow.Help;

                    EditHelp(newHelp);
                    PopulateDataGrid();
                }
            }
        }

        private void AddHelp(Help help)
        {
            SqlConnection scnConn = new SqlConnection(connstr);

            string strQuery = "INSERT INTO Help VALUES('title', @Controller, @Action, @Description)";

            SqlCommand scmCommand = new SqlCommand(strQuery, scnConn);
            scmCommand.Parameters.AddWithValue("@Controller", help.Controller);
            scmCommand.Parameters.AddWithValue("@Action", help.Action);
            scmCommand.Parameters.AddWithValue("@Description", help.HTML);

            try
            {
                scnConn.Open();
                scmCommand.ExecuteNonQuery();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            finally
            {
                scnConn.Close();
                PopulateDataGrid();
            }
        }

        private void EditHelp(Help help)
        {
            SqlConnection scnConn = new SqlConnection(connstr);

            string strQuery = "UPDATE Help SET controller_name = @Controller, action_name = @Action, description = @Description WHERE id_help = @id";

            SqlCommand scmCommand = new SqlCommand(strQuery, scnConn);
            scmCommand.Parameters.AddWithValue("@id", help.IdHelp);
            scmCommand.Parameters.AddWithValue("@Controller", help.Controller);
            scmCommand.Parameters.AddWithValue("@Action", help.Action);
            scmCommand.Parameters.AddWithValue("@Description", help.HTML);

            try
            {
                scnConn.Open();
                scmCommand.ExecuteNonQuery();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            finally
            {
                scnConn.Close();
                PopulateDataGrid();
            }
        }

        private void BtnRemove_Click(object sender, RoutedEventArgs e)
        {
            IList rows = DtHelp.SelectedItems;
            if (rows.Count == 0)
            {
                MessageBox.Show("Por favor seleccione um item da lista.");
            }
            else
            {
                if (MessageBox.Show("Tem a certeza que pretende remover?", "Confirmação de Remoção", MessageBoxButton.YesNo) == MessageBoxResult.Yes)
                {
                    SqlConnection scnConn = new SqlConnection(connstr);

                    string strQuery = "DELETE FROM Help WHERE id_help = @id ";

                    SqlCommand scmCommand = new SqlCommand(strQuery, scnConn);
                    scmCommand.Parameters.AddWithValue("@id", ((Help)rows[0]).IdHelp);

                    try
                    {
                        scnConn.Open();
                        scmCommand.ExecuteNonQuery();
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show(ex.Message);
                    }
                    finally
                    {
                        scnConn.Close();
                        PopulateDataGrid();
                    }
                }
            }
        }

        
    }
}
